// DO NOT EDIT THIS FILE
// This file is autogenerated from userlibsgen.py

#ifdef ARDUINO

#include "../eeprom.h"

Variable userlib_module_eeprom(uint8_t function, uint8_t argcount, Variable arg[]) {
    switch(function) {
    case 0:
        return eeprom::read(argcount, arg);
    case 1:
        return eeprom::write(argcount, arg);
    case 2:
        return eeprom::update(argcount, arg);
    default:
        assert(false);
    }
    return Variable::Zero();
}

#include "../nrf24.h"

Variable userlib_module_nrf24(uint8_t function, uint8_t argcount, Variable arg[]) {
    switch(function) {
    default:
        assert(false);
    }
    return Variable::Zero();
}

#include "../spi.h"

Variable userlib_module_spi(uint8_t function, uint8_t argcount, Variable arg[]) {
    switch(function) {
    case 0:
        return spi::beginTransaction(argcount, arg);
    case 1:
        return spi::begin(argcount, arg);
    case 2:
        return spi::end(argcount, arg);
    case 3:
        return spi::transfer(argcount, arg);
    case 4:
        return spi::endTransaction(argcount, arg);
    default:
        assert(false);
    }
    return Variable::Zero();
}

#include "../arduinolib.h"

Variable userlib_module_arduinolib(uint8_t function, uint8_t argcount, Variable arg[]) {
    switch(function) {
    case 0:
        return arduinolib::digitalWrite(argcount, arg);
    case 1:
        return arduinolib::pinMode(argcount, arg);
    case 2:
        return arduinolib::digitalRead(argcount, arg);
    default:
        assert(false);
    }
    return Variable::Zero();
}
#endif

#ifndef ARDUINO

#include "../testuserlib.h"

Variable userlib_module_testuserlib(uint8_t function, uint8_t argcount, Variable arg[]) {
    switch(function) {
    case 0:
        return testuserlib::println(argcount, arg);
    case 1:
        return testuserlib::printstr(argcount, arg);
    case 2:
        return testuserlib::math_add(argcount, arg);
    case 3:
        return testuserlib::math_power(argcount, arg);
    default:
        assert(false);
    }
    return Variable::Zero();
}
#endif


bool is_userlib_module_enabled(uint8_t module) {
    switch(module) {
    case 6: // eeprom
    case 5: // nrf24
    case 7: // testuserlib
    case 2: // spi
    case 0: // arduinolib
        return true;
    }
    return false;
}

Variable call_userlib_function(uint8_t module, uint8_t function, uint8_t argcount, Variable arg[]) {
    switch(module) {
#ifdef ARDUINO
    case 6:
        return userlib_module_eeprom(function, argcount, arg);
    case 5:
        return userlib_module_nrf24(function, argcount, arg);
    case 2:
        return userlib_module_spi(function, argcount, arg);
    case 0:
        return userlib_module_arduinolib(function, argcount, arg);
#endif

#ifndef ARDUINO
    case 7:
        return userlib_module_testuserlib(function, argcount, arg);
#endif
    default:
        assert(false);
    }
    return Variable::Zero();
}
